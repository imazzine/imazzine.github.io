<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="423px" preserveAspectRatio="none" style="width:381px;height:423px;" version="1.1" viewBox="0 0 381 423" width="381px" zoomAndPan="magnify"><defs><filter height="300%" id="f6x43p8tgdmdy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="248" x="65.5" y="27.4023">Definition: Node#childNodes</text><ellipse cx="190" cy="41.1992" fill="#000000" filter="url(#f6x43p8tgdmdy)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FFFFFF" filter="url(#f6x43p8tgdmdy)" height="311.0195" style="stroke: #000000; stroke-width: 2.0;" width="360" x="10" y="61.6523"/><path d="M83,62.6523 L83,71.1406 L73,81.1406 L10,81.1406 " fill="none" style="stroke: #000000; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="63" x="13" y="76.1875">SyncTask</text><rect fill="#FEFECE" filter="url(#f6x43p8tgdmdy)" height="34.1328" style="stroke: #A80036; stroke-width: 1.5;" width="340" x="20" y="98.1406"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="320" x="30" y="119.7422">const children = internal.nodesIndices.get(this).children</text><rect fill="#FEFECE" filter="url(#f6x43p8tgdmdy)" height="34.1328" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="108" y="152.2734"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="144" x="118" y="173.875">const result = new Map()</text><rect fill="#FEFECE" filter="url(#f6x43p8tgdmdy)" height="34.1328" style="stroke: #A80036; stroke-width: 1.5;" width="153" x="113.5" y="250.4063"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="123.5" y="272.0078">result.set(i, children[i])</text><polygon fill="#FEFECE" filter="url(#f6x43p8tgdmdy)" points="94,206.4063,286,206.4063,298,218.4063,286,230.4063,94,230.4063,82,218.4063,94,206.4063" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="94" y="222.5635">for let i = 0; i &lt; children.length; i++</text><polygon fill="#FEFECE" filter="url(#f6x43p8tgdmdy)" points="154.5,326.5391,235.5,326.5391,225.5,360.6719,144.5,360.6719" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="154.5" y="348.1406">return result</text><ellipse cx="190" cy="402.6719" fill="#FFFFFF" filter="url(#f6x43p8tgdmdy)" rx="10" ry="10" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 2.5;" x1="183.8128" x2="196.1872" y1="396.4847" y2="408.8591"/><line style="stroke: #000000; stroke-width: 2.5;" x1="196.1872" x2="183.8128" y1="396.4847" y2="408.8591"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="132.2734" y2="152.2734"/><polygon fill="#A80036" points="186,142.2734,190,152.2734,194,142.2734,190,146.2734" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="230.4063" y2="250.4063"/><polygon fill="#A80036" points="186,240.4063,190,250.4063,194,240.4063,190,244.4063" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="284.5391" y2="294.5391"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="310" y1="294.5391" y2="294.5391"/><polygon fill="#A80036" points="306,265.4727,310,255.4727,314,265.4727,310,261.4727" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="310" x2="310" y1="218.4063" y2="294.5391"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="310" x2="298" y1="218.4063" y2="218.4063"/><polygon fill="#A80036" points="308,214.4063,298,218.4063,308,222.4063,304,218.4063" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="82" x2="70" y1="218.4063" y2="218.4063"/><polygon fill="#A80036" points="66,251.4727,70,261.4727,74,251.4727,70,255.4727" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="70" x2="70" y1="218.4063" y2="306.5391"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="70" x2="190" y1="306.5391" y2="306.5391"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="306.5391" y2="326.5391"/><polygon fill="#A80036" points="186,316.5391,190,326.5391,194,316.5391,190,320.5391" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="186.4063" y2="206.4063"/><polygon fill="#A80036" points="186,196.4063,190,206.4063,194,196.4063,190,200.4063" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="51.1992" y2="98.1406"/><polygon fill="#A80036" points="186,88.1406,190,98.1406,194,88.1406,190,92.1406" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="190" x2="190" y1="360.6719" y2="392.6719"/><polygon fill="#A80036" points="186,382.6719,190,392.6719,194,382.6719,190,386.6719" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml Definition_Node.childNodes
    title Definition: Node#childNodes

    start
        partition SyncTask {
            :const children = internal.nodesIndices.get(this).children]
            :const result = new Map()]
            while (for let i = 0; i < children.length; i++)
                :result.set(i, children[i]) ]
            endwhile
            :return result/
        }
    end
@enduml

PlantUML version 1.2019.09(Mon Aug 26 19:19:51 EEST 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 13.0.1+9
Operating System: Mac OS X
OS Version: 10.15.3
Default Encoding: UTF-8
Language: en
Country: UA
--></g></svg>